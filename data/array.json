{
  "category": "Array",
  "problems": [
    {
      "id": 1,
      "title": "Remove Duplicates from Sorted Array",
      "difficulty": "Easy",
      "status": "Unsolved",
      "description": "Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same. Then return the number of unique elements in nums.",
      "input_format": "An integer array nums",
      "output_format": "Return the number of unique elements",
      "examples": [
        {
          "input": "nums = [1,1,2]",
          "output": "2",
          "explanation": "Your function should return k = 2, with the first two elements being 1 and 2."
        },
        {
          "input": "nums = [0,0,1,1,1,2,2,3,3,4]",
          "output": "5",
          "explanation": "Your function should return k = 5, with the first five elements being 0, 1, 2, 3, and 4."
        }
      ],
      "constraints": [
        "0 <= nums.length <= 3 * 10^4",
        "-10^4 <= nums[i] <= 10^4",
        "nums is sorted in non-decreasing order."
      ]
    },
    {
      "id": 2,
      "title": "Two Sum",
      "difficulty": "Easy",
      "status": "Unsolved",
      "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.",
      "input_format": "An integer array nums and an integer target",
      "output_format": "Return indices of the two numbers",
      "examples": [
        {
          "input": "nums = [2,7,11,15], target = 9",
          "output": "[0,1]",
          "explanation": "Because nums[0] + nums[1] == 9, we return [0, 1]."
        },
        {
          "input": "nums = [3,2,4], target = 6",
          "output": "[1,2]",
          "explanation": "Because nums[1] + nums[2] == 6, we return [1, 2]."
        },
        {
          "input": "nums = [3,3], target = 6",
          "output": "[0,1]",
          "explanation": "Because nums[0] + nums[1] == 6, we return [0, 1]."
        }
      ],
      "constraints": [
        "2 <= nums.length <= 10^4",
        "-10^9 <= nums[i] <= 10^9",
        "-10^9 <= target <= 10^9",
        "Only one valid answer exists."
      ],
      "testCases": [
        { "input": { "nums": [2,7,11,15], "target": 9 }, "output": [0,1] },
        { "input": { "nums": [3,2,4], "target": 6 }, "output": [1,2] },
        { "input": { "nums": [3,3], "target": 6 }, "output": [0,1] },
        { "input": { "nums": [1,2,3,4,5], "target": 9 }, "output": [3,4] },
        { "input": { "nums": [-1,-2,-3,-4,-5], "target": -8 }, "output": [2,4] }
      ]
    },
    {
      "id": 3,
      "title": "Best Time to Buy and Sell Stock II",
      "difficulty": "Medium",
      "status": "Unsolved",
      "description": "You are given an integer array prices where prices[i] is the price of a given stock on the ith day. On each day, you may decide to buy and/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day. Find and return the maximum profit you can achieve.",
      "input_format": "An integer array prices",
      "output_format": "Return the maximum profit",
      "examples": [
        {
          "input": "prices = [7,1,5,3,6,4]",
          "output": "7",
          "explanation": "Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4. Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3. Total profit is 4 + 3 = 7."
        },
        {
          "input": "prices = [1,2,3,4,5]",
          "output": "4",
          "explanation": "Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4. Total profit is 4."
        }
      ],
      "constraints": [
        "1 <= prices.length <= 3 * 10^4",
        "0 <= prices[i] <= 10^4"
      ]
    },
    {
      "id": 4,
      "title": "Contains Duplicate",
      "difficulty": "Easy",
      "status": "Unsolved",
      "description": "Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.",
      "input_format": "An integer array nums",
      "output_format": "Boolean",
      "examples": [
        {
          "input": "nums = [1,2,3,1]",
          "output": "true",
          "explanation": "1 appears twice"
        },
        {
          "input": "nums = [1,2,3,4]",
          "output": "false",
          "explanation": "All elements are distinct"
        }
      ],
      "constraints": [
        "1 <= nums.length <= 10^5",
        "-10^9 <= nums[i] <= 10^9"
      ]
    },
    {
      "id": 5,
      "title": "Move Zeroes",
      "difficulty": "Easy",
      "status": "Unsolved",
      "description": "Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements. Note that you must do this in-place without making a copy of the array.",
      "input_format": "An integer array nums",
      "output_format": "Array modified in-place",
      "examples": [
        {
          "input": "nums = [0,1,0,3,12]",
          "output": "[1,3,12,0,0]",
          "explanation": "Move all zeros to the end while maintaining relative order"
        },
        {
          "input": "nums = [0]",
          "output": "[0]",
          "explanation": "Single zero element"
        }
      ],
      "constraints": [
        "1 <= nums.length <= 10^4",
        "-2^31 <= nums[i] <= 2^31 - 1"
      ]
    }
  ]
}
